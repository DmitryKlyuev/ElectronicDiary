import React, {useState, useContext} from "react";
import {Link, Redirect} from "react-router-dom";
import app from 'services/firebase/base';
import {CurrentUserContext} from 'contexts/currentUser';
import BackendErrors from "components/backendErrors";
import 'pages/authentication/style.css';

const Authentication = props => {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const isLogin = props.match.path === '/login';
    const pageTitle = isLogin ? 'Вход' : 'Регистрация';
    const descriptionLink = isLogin ? '/register' : '/login';
    const descriptionText = isLogin ? 'Создать аккаунт' : 'Уже есть аккаунт?';
    const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false);
    const [, setCurrentUserState] = useContext(CurrentUserContext);
    const [hasError, setHasError] = useState(false);

    const handleSubmit = event => {
        event.preventDefault();

        isLogin ?
            app.auth().signInWithEmailAndPassword(email, password).catch(function (error) {
                setHasError(true)
            }) :
            app.auth().createUserWithEmailAndPassword(email, password).catch(function (error) {
                setHasError(true)
            });

        app.auth().onAuthStateChanged(function (user) {
            if (user) {
                setCurrentUserState({
                    isLoggedIn: true
                });
                setIsSuccessfulSubmit(true)
            }
        });
    };

    if (isSuccessfulSubmit) {
        return <Redirect to='/diary'/>;
    }


    return (
        <div className='container mt-5 mb-5 p-5'>
            <div className='row'>
                <div className='col-md-6 offset-md-3 text-center'>
                    <h1 className='mt-5 text-dark'>{pageTitle}</h1>
                    <div className='mb-4'>
                        <Link to={descriptionLink} className='text-white link'>{descriptionText}</Link>
                    </div>
                    <form onSubmit={handleSubmit} className='mb-3'>
                        {hasError && <BackendErrors/>}
                        <input type='email' placeholder='Твой емэйл' className='form-control mb-3'
                               value={email}
                               onChange={e => setEmail(e.target.value)}/>
                        <input type='password' placeholder='Твой пароль' className='form-control mb-3'
                               value={password} onChange={e => setPassword(e.target.value)}/>
                        <button type='submit' className='rounded common-button'>{pageTitle}</button>
                    </form>
                    <Link to='/' className='text-white text-decoration-none link'>Устал?</Link>
                </div>
            </div>
        </div>
    )
};

export default Authentication
import React, {useEffect, useState} from "react";
import app from 'services/firebase/base';
import {Redirect} from "react-router-dom";
import {CurrentUserContext} from "contexts/currentUser";
import {useContext} from 'react';
import NoteForm from 'components/noteForm';
import NoteList from "components/noteList";

const Diary = () => {
    const initialValues = {text: ''};
    const [currentUserState, setCurrentUserState] = useContext(CurrentUserContext);
    const [count, setCount] = useState(0);
    const [data, setData] = useState([]);
    const res = [];


    // Отправка заполненной формы на сервер
    const handleSubmit = note => {
        if (!app.auth().currentUser) {
            signOut()
        } else {
            const db = app.database();
            const userId = app.auth().currentUser.uid;
            const ref = db.ref(userId);
            ref.push(note);
            setCount(count + 1)
        }
    };
    /////


    // Получение всех данных с сервера
    useEffect(() => {
        if (!app.auth().currentUser) {
            signOut()
        } else {
            const db = app.database();
            const userId = app.auth().currentUser.uid;
            const ref = db.ref(userId);
            ref.on("child_added", snapshot => {
                const data = snapshot.val();
                res.push(Object.values(data));
                setData(res)
            });
        }
    }, [count]);

    const pause = () => {
        return new Promise((res) => setTimeout(res, 1000));
    };

    useEffect(() => {
        async function wait() {
            await pause();
            setCount(count + 1)
        }

        wait()
    }, []);
    /////

    // Удаление заметок
    const deletePost = () => {
        if (!app.auth().currentUser) {
            signOut()
        } else {
            const db = app.database();
            const userId = app.auth().currentUser.uid;
            const ref = db.ref(userId);
            ref.remove();
            ref.once("value", snapshot => {
                const data = snapshot.val();
                setData(data)
            });
        }
    };
    /////


    // Разлогин
    const signOut = () => {
        setCurrentUserState({isLoggedIn: false});
        app.auth().signOut();
    };

    if (currentUserState.isLoggedIn === false) {
        return <Redirect to='/'/>
    }
    /////

    return (
        <div className='container mt-5 mb-5 p-5'>
            <div className='row'>
                <div className='col-md-8'>
                    <div className='d-flex justify-content-between mb-3'>
                        <h3 className='font-weight-bold'>Пиши заметку здесь</h3>
                        <button onClick={signOut} className='rounded p-2 bg-white'>Выйти</button>
                    </div>
                    <NoteForm onSubmit={handleSubmit} initialValues={initialValues}/>
                </div>
                <div className='col-md-4'>
                    <div>
                        <h5>История твоих записей</h5>
                        <ul className='list-group list-group-flush'>
                            {data && data.map(item => (
                                <div className='list-group-item list-group-item-action rounded mb-3'>
                                    <div className='d-flex justify-content-between'>
                                        <li key={item} className='list-unstyled mb-2 mt-1'>
                                            {item[1]}
                                        </li>
                                        <button type="button" onClick={deletePost}
                                                className="close align-self-start close-button">
                                            <span>&times;</span>
                                        </button>
                                    </div>
                                    <small className='d-block text-right'>{item[0]}</small>
                                </div>
                            ))}
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    )
};

export default Diary

